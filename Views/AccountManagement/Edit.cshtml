@model EquipCheck.Models.ViewModels.VM_Account;

@{
    ViewData["Title"] = "編輯員工";
}

<style>
    /* 卡片樣式 */
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: none;
        margin-bottom: 1.5rem;
    }

    /* 麵包屑美化 */
    .breadcrumb {
        background-color: #fff;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    /* 表單元素美化 */
    .form-control:focus, .form-select:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .form-label {
        font-weight: 500;
        color: #495057;
    }

    /* 必填標記樣式 */
    .required-mark {
        color: #dc3545;
        margin-left: 0.25rem;
    }

    /* 卡片標題區域 */
    .card-header {
        background-color: #fff;
        border-bottom: 1px solid rgba(0,0,0,.125);
        padding: 1.5rem;
    }

    /* 按鈕組樣式 */
    .btn-group-bottom {
        padding-top: 1.5rem;
        border-top: 1px solid #dee2e6;
    }

    /* 表單區塊間距 */
    .form-section {
        margin-bottom: 2rem;
    }

    /* 欄位提示文字 */
    .field-hint {
        font-size: 0.875rem;
        color: #6c757d;
        margin-top: 0.25rem;
    }

    /* 檔案上傳區域 */
    .file-upload-area {
        border: 2px dashed #dee2e6;
        padding: 1.5rem;
        text-align: center;
        border-radius: 0.5rem;
        background-color: #f8f9fa;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .file-upload-area:hover {
            border-color: #80bdff;
            background-color: #e9ecef;
        }

    .file-preview {
        max-width: 200px;
        margin-top: 1rem;
    }

    /* 更新檔案上傳區域樣式 */
    .file-upload-area {
        border: 2px dashed #dee2e6;
        padding: 1.5rem;
        text-align: center;
        border-radius: 0.5rem;
        background-color: #f8f9fa;
        transition: all 0.3s ease;
        min-height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .file-upload-area:hover {
            border-color: #80bdff;
            background-color: #e9ecef;
        }

    .file-preview {
        max-width: 200px;
        max-height: 150px;
        border-radius: 0.25rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .preview-section {
        width: 100%;
    }

    .preview-actions {
        margin-top: 1rem;
    }

    .upload-content {
        cursor: pointer;
        width: 100%;
    }
</style>

<!-- 麵包屑 -->
<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <i class="bi bi-gear me-1"></i>系統管理
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("List", "AccountManagement")" class="text-decoration-none">帳號管理</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">編輯員工</li>
    </ol>
</nav>

<div class="card">
    <div class="card-header d-flex align-items-center">
        <i class="bi bi-person-gear me-2 text-primary"></i>
        <h5 class="card-title mb-0">編輯員工</h5>
    </div>
    <div class="card-body">
        <form id="accountForm" method="post" class="needs-validation" novalidate enctype="multipart/form-data">
            @Html.HiddenFor(m => m.MemberUID) 
            @Html.HiddenFor(m => m.MemberAccount)
            <div class="row g-4">
                <!-- 員工名稱 -->
                <div class="col-md-6 form-section">
                    <label for="userName" class="form-label">
                        <i class="bi bi-person me-1"></i>員工名稱
                        <span class="required-mark">*</span>
                    </label>
                    @* @Html.TextBoxFor(m => m.MemberName, new { @class = "form-control", placeholder = "請輸入員工名稱", required = "required" }) *@
                    <input type="text" class="form-control" value="@Model.MemberName" readonly disabled>
                    <div class="invalid-feedback">請輸入員工名稱</div>
                </div>

                <!-- 員工帳號（唯讀） -->
                <div class="col-md-6 form-section">
                    <label for="userAccount" class="form-label">
                        <i class="bi bi-person-badge me-1"></i>員工帳號
                    </label>
                    <input type="text" class="form-control" value="@Model.MemberAccount" readonly disabled>
                </div>

                <!-- 部門名稱 -->
                <div class="col-md-6 form-section">
                    <label for="departmentId" class="form-label">
                        <i class="bi bi-building me-1"></i>部門名稱
                        <span class="required-mark">*</span>
                    </label>
                    @Html.DropDownListFor(m => m.DepartmentUID, new SelectList(Model.DepartmentDDL, "Value", "Text"), new { @class = "form-select", required = "required" })
                </div>

                <!-- 身分 -->
                <div class="col-md-6 form-section">
                    <label for="role" class="form-label">
                        <i class="bi bi-shield-lock me-1"></i>身分
                        <span class="required-mark">*</span>
                    </label>
                    @Html.DropDownListFor(m => m.Role, new SelectList(Model.RoleDDL, "Value", "Text"), new { @class = "form-select", required = "required" })
                </div>

                <!-- 狀態 -->
                <div class="col-md-6 form-section">
                    <label for="status" class="form-label">
                        <i class="bi bi-toggle-on me-1"></i>狀態
                        <span class="required-mark">*</span>
                    </label>
                    @Html.DropDownListFor(m => m.Status, new SelectList(Model.StatusDDL, "Value", "Text"), new { @class = "form-select", required = "required" })
                </div>

                <!-- 分機 -->
                <div class="col-md-6 form-section">
                    <label for="extension" class="form-label">
                        <i class="bi bi-telephone me-1"></i>分機
                        <span class="required-mark">*</span>
                    </label>
                    @Html.TextBoxFor(m => m.Tel, new { @class = "form-control", required = "required" })
                    <div class="invalid-feedback">請輸入分機號碼</div>
                </div>

                <!-- 備註 -->
                <div class="col-md-6 form-section">
                    <label for="notes" class="form-label">
                        <i class="bi bi-sticky me-1"></i>備註
                    </label>
                    @Html.TextAreaFor(m => m.Remark, new { @class = "form-control", placeholder = "請輸入備註", rows = "3" })
                </div>

                <!-- 電子簽名檔上傳 -->
                <div class="col-12 form-section">
                    <label class="form-label">
                        <i class="bi bi-pen me-1"></i>電子簽名檔
                    </label>
                    <div class="file-upload-area" id="signatureUpload">
                        <input type="file" class="d-none" id="signatureFile" name="signatureFile" accept="image/*">
                        @Html.HiddenFor(m => m.SignaturePath)
                        <div class="upload-content @(string.IsNullOrEmpty(Model.SignaturePath) ? "" : "d-none")" id="uploadPrompt">
                            <i class="bi bi-cloud-arrow-up fs-3 mb-2"></i>
                            <p class="mb-0">點擊或拖曳檔案至此處上傳</p>
                            <p class="text-muted small mb-0">支援的格式：JPG, PNG, JPEG, GIF</p>
                        </div>
                        <div class="preview-section @(string.IsNullOrEmpty(Model.SignaturePath) ? "d-none" : "")" id="previewSection">
                            <img id="signaturePreview" class="file-preview"
                                 src="@(string.IsNullOrEmpty(Model.SignaturePath) ? "#" : Model.SignaturePath)"
                                 alt="簽名預覽">
                            <div class="preview-actions mt-3">
                                <button type="button" class="btn btn-outline-danger btn-sm" id="removeSignature">
                                    <i class="bi bi-trash me-1"></i>移除
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- 按鈕群組 -->
                <div class="col-12 btn-group-bottom">
                    <div class="d-flex justify-content-end gap-2">
                        <button type="button" class="btn btn-secondary" onclick="history.back()">
                            <i class="bi bi-arrow-left me-1"></i>返回
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check-lg me-1"></i>儲存
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // 常數定義
            const ALLOWED_FILE_TYPES = ['image/jpeg', 'image/png', 'image/gif'];
            const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB
            const ERROR_MESSAGES = {
                FILE_TYPE: '請上傳 JPG、PNG 或 GIF 格式的圖片',
                FILE_SIZE: '檔案大小不能超過 5MB',
                SYSTEM_ERROR: '系統錯誤，請稍後再試',
                VALIDATION_ERROR: '請檢查必填欄位'
            };

            // DOM 元素
            const $form = $('#accountForm');
            const $uploadArea = $('#signatureUpload');
            const $fileInput = $('#signatureFile');
            const $uploadPrompt = $('#uploadPrompt');
            const $previewSection = $('#previewSection');
            const $preview = $('#signaturePreview');
            const $removeBtn = $('#removeSignature');

            // 初始化
            initializeFileUpload();
            initializeFormValidation();

            // 初始化檔案上傳功能
            function initializeFileUpload() {
                // 檔案上傳區域點擊處理
                $uploadArea.on('click', handleUploadAreaClick);

                // 防止檔案input的點擊事件冒泡
                $fileInput.on('click', e => e.stopPropagation());

                // 檔案選擇處理
                $fileInput.on('change', handleFileChange);

                // 拖放處理
                $uploadArea
                    .on('dragover dragenter', handleDragOver)
                    .on('dragleave dragend', handleDragLeave)
                    .on('drop', handleDrop);

                // 移除按鈕處理
                $removeBtn.on('click', handleRemoveFile);

                // 如果有預設圖片，顯示預覽
                const existingPath = '@Model.SignaturePath';
                if (existingPath && existingPath !== '') {
                    switchToPreviewMode(existingPath);
                }
            }

            // 初始化表單驗證
            function initializeFormValidation() {
                $form.on('submit', handleFormSubmit);
            }

            // 事件處理函數
            function handleUploadAreaClick(e) {
                if (e.target === this || $(e.target).closest('.upload-content').length) {
                    $fileInput.click();
                }
            }

            function handleFileChange(e) {
                const file = e.target.files[0];
                handleFileSelect(file);
            }

            function handleDragOver(e) {
                e.preventDefault();
                e.stopPropagation();
                $(this).addClass('border-primary');
            }

            function handleDragLeave(e) {
                e.preventDefault();
                e.stopPropagation();
                $(this).removeClass('border-primary');
            }

            function handleDrop(e) {
                e.preventDefault();
                e.stopPropagation();
                $(this).removeClass('border-primary');

                const files = e.originalEvent.dataTransfer.files;
                handleFileSelect(files[0]);
            }

            function handleRemoveFile(e) {
                e.stopPropagation();
                $fileInput.val('');
                switchToUploadMode();
            }

            function handleFormSubmit(e) {
                e.preventDefault();

                if (!validateForm()) {
                    return;
                }

                submitForm();
            }

            // 工具函數
            function handleFileSelect(file) {
                if (!file) return;

                if (!validateFileType(file)) {
                    showError('不支援的檔案格式', ERROR_MESSAGES.FILE_TYPE);
                    return;
                }

                if (!validateFileSize(file)) {
                    showError('檔案過大', ERROR_MESSAGES.FILE_SIZE);
                    return;
                }

                previewFile(file);
            }

            function validateFileType(file) {
                return ALLOWED_FILE_TYPES.includes(file.type);
            }

            function validateFileSize(file) {
                return file.size <= MAX_FILE_SIZE;
            }

            function validateForm() {
                const isValid = $form[0].checkValidity();
                if (!isValid) {
                    $form.addClass('was-validated');
                    showError('驗證失敗', ERROR_MESSAGES.VALIDATION_ERROR);
                }
                return isValid;
            }

            function previewFile(file) {
                const reader = new FileReader();
                reader.onload = e => switchToPreviewMode(e.target.result);
                reader.onerror = () => showError('檔案讀取失敗', ERROR_MESSAGES.SYSTEM_ERROR);
                reader.readAsDataURL(file);
            }

            function switchToUploadMode() {
                $uploadPrompt.removeClass('d-none');
                $previewSection.addClass('d-none');
                $preview.attr('src', '');
            }

            function switchToPreviewMode(imageUrl) {
                $preview.attr('src', imageUrl);
                $uploadPrompt.addClass('d-none');
                $previewSection.removeClass('d-none');
            }

            function submitForm() {
                const formData = new FormData($form[0]);

                $.ajax({
                    url: '@Url.Action("Edit", "AccountManagement")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    // beforeSend: () => showLoading(),
                    success: handleSubmitSuccess,
                    error: handleSubmitError,
                    // complete: () => hideLoading()
                });
            }

            function handleSubmitSuccess(response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: '更新成功',
                        text: '員工資料已成功更新',
                        confirmButtonText: '確定'
                    }).then(() => {
                        window.location.href = '@Url.Action("List", "AccountManagement")';
                    });
                } else {
                    showError('更新失敗', response.message || ERROR_MESSAGES.SYSTEM_ERROR);
                }
            }

            function handleSubmitError() {
                showError('系統錯誤', ERROR_MESSAGES.SYSTEM_ERROR);
            }

            // UI 輔助函數
            function showError(title, message) {
                Swal.fire({
                    icon: 'error',
                    title: title,
                    text: message,
                    confirmButtonText: '確定'
                });
            }

            function showLoading() {
                Swal.fire({
                    title: '處理中...',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    }
                });
            }

            function hideLoading() {
                Swal.close();
            }
        });
    </script>
}